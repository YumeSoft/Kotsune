name: Android Release

permissions:
  contents: write

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract version from build.gradle.kts
        id: get_version
        run: |
          # Extract versionName from build.gradle.kts using grep and sed
          VERSION=$(grep -o 'versionName = "[^"]*"' app/build.gradle.kts | sed 's/versionName = "//;s/"$//')
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Auto-create or update tag if triggered manually
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Delete the tag locally if it exists
          git tag -d v${{ steps.get_version.outputs.VERSION }} 2>/dev/null || true
          # Create/recreate the tag
          git tag -a v${{ steps.get_version.outputs.VERSION }} -m "Release v${{ steps.get_version.outputs.VERSION }}"
          # Force push the tag to update it if it already exists
          git push --force "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/YumeSoft/Kotsune.git" v${{ steps.get_version.outputs.VERSION }}

      - name: Setup build tool version variable
        shell: bash
        run: |
            BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
            echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
            echo Last build tool version is: $BUILD_TOOL_VERSION

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Caching Gradle
        # This step caches the Gradle dependencies to speed up the build process.
        # It uses the actions/cache action to store the Gradle caches and wrapper files.
        # The cache key is based on the OS and the hash of the gradle files.
        # The restore-keys option allows for partial cache hits.
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          alias: ${{ secrets.KEY_ALIAS }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: true
          files: app/build/outputs/apk/release/kotsune-signed.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}