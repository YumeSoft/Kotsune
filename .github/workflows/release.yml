name: Android Release

permissions:
  contents: write # needed for creating releases and pushing tags

on:
  # Keep tag-based triggers for automated deployments
  push:
    tags:
      - 'v*'

  # Add manual trigger with version input
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (without "v" prefix, e.g. 0.0.1)'
        required: true
        default: '0.0.1'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Determine version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Auto-create tag if manual trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if git rev-parse "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "Tag v${{ github.event.inputs.version }} already exists. Skipping tag creation."
          else
            git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}"
            git push origin v${{ github.event.inputs.version }}
          fi

      - name: Update version in build.gradle
        run: |
          sed -i "s/versionName \".*\"/versionName \"${{ steps.get_version.outputs.VERSION }}\"/" app/build.gradle.kts
          sed -i "s/versionCode .*/versionCode ${{ github.run_number }}/" app/build.gradle.kts

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: ${{steps.sign_app.outputs.signedReleaseFile}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}